"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/trpc/[trpc]";
exports.ids = ["pages/api/trpc/[trpc]"];
exports.modules = {

/***/ "@trpc/server":
/*!*******************************!*\
  !*** external "@trpc/server" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("@trpc/server");

/***/ }),

/***/ "zod":
/*!**********************!*\
  !*** external "zod" ***!
  \**********************/
/***/ ((module) => {

module.exports = import("zod");;

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "(api)/./node_modules/@trpc/server/adapters/next/dist/trpc-server-adapters-next.cjs.dev.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@trpc/server/adapters/next/dist/trpc-server-adapters-next.cjs.dev.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar transformTRPCResponse = __webpack_require__(/*! ../../../dist/transformTRPCResponse-36a41418.cjs.dev.js */ \"(api)/./node_modules/@trpc/server/dist/transformTRPCResponse-36a41418.cjs.dev.js\");\nvar nodeHTTPRequestHandler = __webpack_require__(/*! ../../../dist/nodeHTTPRequestHandler-9a93c255.cjs.dev.js */ \"(api)/./node_modules/@trpc/server/dist/nodeHTTPRequestHandler-9a93c255.cjs.dev.js\");\n__webpack_require__(/*! url */ \"url\");\n__webpack_require__(/*! ../../../dist/resolveHTTPResponse-ab01e4b9.cjs.dev.js */ \"(api)/./node_modules/@trpc/server/dist/resolveHTTPResponse-ab01e4b9.cjs.dev.js\");\n__webpack_require__(/*! ../../../dist/codes-130e62df.cjs.dev.js */ \"(api)/./node_modules/@trpc/server/dist/codes-130e62df.cjs.dev.js\");\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nfunction createNextApiHandler(opts) {\n  return async (req, res) => {\n    function getPath() {\n      if (typeof req.query.trpc === 'string') {\n        return req.query.trpc;\n      }\n\n      if (Array.isArray(req.query.trpc)) {\n        return req.query.trpc.join('/');\n      }\n\n      return null;\n    }\n\n    const path = getPath();\n\n    if (path === null) {\n      const error = opts.router.getErrorShape({\n        error: new transformTRPCResponse.TRPCError({\n          message: 'Query \"trpc\" not found - is the file named `[trpc]`.ts or `[...trpc].ts`?',\n          code: 'INTERNAL_SERVER_ERROR'\n        }),\n        type: 'unknown',\n        ctx: undefined,\n        path: undefined,\n        input: undefined\n      });\n      const json = {\n        id: -1,\n        error\n      };\n      res.statusCode = 500;\n      res.json(json);\n      return;\n    }\n\n    await nodeHTTPRequestHandler.nodeHTTPRequestHandler({ ...opts,\n      req,\n      res,\n      path\n    });\n  };\n}\n\nexports.createNextApiHandler = createNextApiHandler;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2FkYXB0ZXJzL25leHQvZGlzdC90cnBjLXNlcnZlci1hZGFwdGVycy1uZXh0LmNqcy5kZXYuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsOENBQTZDLEVBQUUsYUFBYSxFQUFDOztBQUU3RCw0QkFBNEIsbUJBQU8sQ0FBQyxpSkFBeUQ7QUFDN0YsNkJBQTZCLG1CQUFPLENBQUMsbUpBQTBEO0FBQy9GLG1CQUFPLENBQUMsZ0JBQUs7QUFDYixtQkFBTyxDQUFDLDZJQUF1RDtBQUMvRCxtQkFBTyxDQUFDLGlIQUF5Qzs7QUFFakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDBEQUEwRDtBQUMxRDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQSw0QkFBNEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jcmVhdGUtbmV4LWFwcC8uL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvYWRhcHRlcnMvbmV4dC9kaXN0L3RycGMtc2VydmVyLWFkYXB0ZXJzLW5leHQuY2pzLmRldi5qcz9mYzAzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcblxudmFyIHRyYW5zZm9ybVRSUENSZXNwb25zZSA9IHJlcXVpcmUoJy4uLy4uLy4uL2Rpc3QvdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlLTM2YTQxNDE4LmNqcy5kZXYuanMnKTtcbnZhciBub2RlSFRUUFJlcXVlc3RIYW5kbGVyID0gcmVxdWlyZSgnLi4vLi4vLi4vZGlzdC9ub2RlSFRUUFJlcXVlc3RIYW5kbGVyLTlhOTNjMjU1LmNqcy5kZXYuanMnKTtcbnJlcXVpcmUoJ3VybCcpO1xucmVxdWlyZSgnLi4vLi4vLi4vZGlzdC9yZXNvbHZlSFRUUFJlc3BvbnNlLWFiMDFlNGI5LmNqcy5kZXYuanMnKTtcbnJlcXVpcmUoJy4uLy4uLy4uL2Rpc3QvY29kZXMtMTMwZTYyZGYuY2pzLmRldi5qcycpO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55ICovXG5mdW5jdGlvbiBjcmVhdGVOZXh0QXBpSGFuZGxlcihvcHRzKSB7XG4gIHJldHVybiBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICBmdW5jdGlvbiBnZXRQYXRoKCkge1xuICAgICAgaWYgKHR5cGVvZiByZXEucXVlcnkudHJwYyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHJlcS5xdWVyeS50cnBjO1xuICAgICAgfVxuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShyZXEucXVlcnkudHJwYykpIHtcbiAgICAgICAgcmV0dXJuIHJlcS5xdWVyeS50cnBjLmpvaW4oJy8nKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgY29uc3QgcGF0aCA9IGdldFBhdGgoKTtcblxuICAgIGlmIChwYXRoID09PSBudWxsKSB7XG4gICAgICBjb25zdCBlcnJvciA9IG9wdHMucm91dGVyLmdldEVycm9yU2hhcGUoe1xuICAgICAgICBlcnJvcjogbmV3IHRyYW5zZm9ybVRSUENSZXNwb25zZS5UUlBDRXJyb3Ioe1xuICAgICAgICAgIG1lc3NhZ2U6ICdRdWVyeSBcInRycGNcIiBub3QgZm91bmQgLSBpcyB0aGUgZmlsZSBuYW1lZCBgW3RycGNdYC50cyBvciBgWy4uLnRycGNdLnRzYD8nLFxuICAgICAgICAgIGNvZGU6ICdJTlRFUk5BTF9TRVJWRVJfRVJST1InXG4gICAgICAgIH0pLFxuICAgICAgICB0eXBlOiAndW5rbm93bicsXG4gICAgICAgIGN0eDogdW5kZWZpbmVkLFxuICAgICAgICBwYXRoOiB1bmRlZmluZWQsXG4gICAgICAgIGlucHV0OiB1bmRlZmluZWRcbiAgICAgIH0pO1xuICAgICAgY29uc3QganNvbiA9IHtcbiAgICAgICAgaWQ6IC0xLFxuICAgICAgICBlcnJvclxuICAgICAgfTtcbiAgICAgIHJlcy5zdGF0dXNDb2RlID0gNTAwO1xuICAgICAgcmVzLmpzb24oanNvbik7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgYXdhaXQgbm9kZUhUVFBSZXF1ZXN0SGFuZGxlci5ub2RlSFRUUFJlcXVlc3RIYW5kbGVyKHsgLi4ub3B0cyxcbiAgICAgIHJlcSxcbiAgICAgIHJlcyxcbiAgICAgIHBhdGhcbiAgICB9KTtcbiAgfTtcbn1cblxuZXhwb3J0cy5jcmVhdGVOZXh0QXBpSGFuZGxlciA9IGNyZWF0ZU5leHRBcGlIYW5kbGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/@trpc/server/adapters/next/dist/trpc-server-adapters-next.cjs.dev.js\n");

/***/ }),

/***/ "(api)/./node_modules/@trpc/server/adapters/next/dist/trpc-server-adapters-next.cjs.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@trpc/server/adapters/next/dist/trpc-server-adapters-next.cjs.js ***!
  \***************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./trpc-server-adapters-next.cjs.dev.js */ \"(api)/./node_modules/@trpc/server/adapters/next/dist/trpc-server-adapters-next.cjs.dev.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2FkYXB0ZXJzL25leHQvZGlzdC90cnBjLXNlcnZlci1hZGFwdGVycy1uZXh0LmNqcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLEVBQUUsK0tBQWtFO0FBQ3BFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3JlYXRlLW5leC1hcHAvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2FkYXB0ZXJzL25leHQvZGlzdC90cnBjLXNlcnZlci1hZGFwdGVycy1uZXh0LmNqcy5qcz9iMjJmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIikge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuL3RycGMtc2VydmVyLWFkYXB0ZXJzLW5leHQuY2pzLnByb2QuanNcIik7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuL3RycGMtc2VydmVyLWFkYXB0ZXJzLW5leHQuY2pzLmRldi5qc1wiKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/@trpc/server/adapters/next/dist/trpc-server-adapters-next.cjs.js\n");

/***/ }),

/***/ "(api)/./node_modules/@trpc/server/dist/codes-130e62df.cjs.dev.js":
/*!******************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/codes-130e62df.cjs.dev.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nfunction invert(obj) {\n  const newObj = Object.create(null);\n\n  for (const key in obj) {\n    const v = obj[key];\n    newObj[v] = key;\n  }\n\n  return newObj;\n}\n\n/**\n * JSON-RPC 2.0 Error codes\n *\n * `-32000` to `-32099` are reserved for implementation-defined server-errors.\n * For tRPC we're copying the last digits of HTTP 4XX errors.\n */\n\nconst TRPC_ERROR_CODES_BY_KEY = {\n  /**\n   * Invalid JSON was received by the server.\n   * An error occurred on the server while parsing the JSON text.\n   */\n  PARSE_ERROR: -32700,\n\n  /**\n   * The JSON sent is not a valid Request object.\n   */\n  BAD_REQUEST: -32600,\n  // 400\n\n  /**\n   * Internal JSON-RPC error.\n   */\n  INTERNAL_SERVER_ERROR: -32603,\n  // Implementation specific errors\n  UNAUTHORIZED: -32001,\n  // 401\n  FORBIDDEN: -32003,\n  // 403\n  NOT_FOUND: -32004,\n  // 404\n  METHOD_NOT_SUPPORTED: -32005,\n  // 405\n  TIMEOUT: -32008,\n  // 408\n  CONFLICT: -32009,\n  // 409\n  PRECONDITION_FAILED: -32012,\n  // 412\n  PAYLOAD_TOO_LARGE: -32013,\n  // 413\n  CLIENT_CLOSED_REQUEST: -32099 // 499\n\n};\nconst TRPC_ERROR_CODES_BY_NUMBER = /*#__PURE__*/invert(TRPC_ERROR_CODES_BY_KEY);\n\nexports.TRPC_ERROR_CODES_BY_KEY = TRPC_ERROR_CODES_BY_KEY;\nexports.TRPC_ERROR_CODES_BY_NUMBER = TRPC_ERROR_CODES_BY_NUMBER;\nexports.invert = invert;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvY29kZXMtMTMwZTYyZGYuY2pzLmRldi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsK0JBQStCO0FBQy9CLGtDQUFrQztBQUNsQyxjQUFjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY3JlYXRlLW5leC1hcHAvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvY29kZXMtMTMwZTYyZGYuY2pzLmRldi5qcz8wZGZkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gaW52ZXJ0KG9iaikge1xuICBjb25zdCBuZXdPYmogPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuXG4gIGZvciAoY29uc3Qga2V5IGluIG9iaikge1xuICAgIGNvbnN0IHYgPSBvYmpba2V5XTtcbiAgICBuZXdPYmpbdl0gPSBrZXk7XG4gIH1cblxuICByZXR1cm4gbmV3T2JqO1xufVxuXG4vKipcbiAqIEpTT04tUlBDIDIuMCBFcnJvciBjb2Rlc1xuICpcbiAqIGAtMzIwMDBgIHRvIGAtMzIwOTlgIGFyZSByZXNlcnZlZCBmb3IgaW1wbGVtZW50YXRpb24tZGVmaW5lZCBzZXJ2ZXItZXJyb3JzLlxuICogRm9yIHRSUEMgd2UncmUgY29weWluZyB0aGUgbGFzdCBkaWdpdHMgb2YgSFRUUCA0WFggZXJyb3JzLlxuICovXG5cbmNvbnN0IFRSUENfRVJST1JfQ09ERVNfQllfS0VZID0ge1xuICAvKipcbiAgICogSW52YWxpZCBKU09OIHdhcyByZWNlaXZlZCBieSB0aGUgc2VydmVyLlxuICAgKiBBbiBlcnJvciBvY2N1cnJlZCBvbiB0aGUgc2VydmVyIHdoaWxlIHBhcnNpbmcgdGhlIEpTT04gdGV4dC5cbiAgICovXG4gIFBBUlNFX0VSUk9SOiAtMzI3MDAsXG5cbiAgLyoqXG4gICAqIFRoZSBKU09OIHNlbnQgaXMgbm90IGEgdmFsaWQgUmVxdWVzdCBvYmplY3QuXG4gICAqL1xuICBCQURfUkVRVUVTVDogLTMyNjAwLFxuICAvLyA0MDBcblxuICAvKipcbiAgICogSW50ZXJuYWwgSlNPTi1SUEMgZXJyb3IuXG4gICAqL1xuICBJTlRFUk5BTF9TRVJWRVJfRVJST1I6IC0zMjYwMyxcbiAgLy8gSW1wbGVtZW50YXRpb24gc3BlY2lmaWMgZXJyb3JzXG4gIFVOQVVUSE9SSVpFRDogLTMyMDAxLFxuICAvLyA0MDFcbiAgRk9SQklEREVOOiAtMzIwMDMsXG4gIC8vIDQwM1xuICBOT1RfRk9VTkQ6IC0zMjAwNCxcbiAgLy8gNDA0XG4gIE1FVEhPRF9OT1RfU1VQUE9SVEVEOiAtMzIwMDUsXG4gIC8vIDQwNVxuICBUSU1FT1VUOiAtMzIwMDgsXG4gIC8vIDQwOFxuICBDT05GTElDVDogLTMyMDA5LFxuICAvLyA0MDlcbiAgUFJFQ09ORElUSU9OX0ZBSUxFRDogLTMyMDEyLFxuICAvLyA0MTJcbiAgUEFZTE9BRF9UT09fTEFSR0U6IC0zMjAxMyxcbiAgLy8gNDEzXG4gIENMSUVOVF9DTE9TRURfUkVRVUVTVDogLTMyMDk5IC8vIDQ5OVxuXG59O1xuY29uc3QgVFJQQ19FUlJPUl9DT0RFU19CWV9OVU1CRVIgPSAvKiNfX1BVUkVfXyovaW52ZXJ0KFRSUENfRVJST1JfQ09ERVNfQllfS0VZKTtcblxuZXhwb3J0cy5UUlBDX0VSUk9SX0NPREVTX0JZX0tFWSA9IFRSUENfRVJST1JfQ09ERVNfQllfS0VZO1xuZXhwb3J0cy5UUlBDX0VSUk9SX0NPREVTX0JZX05VTUJFUiA9IFRSUENfRVJST1JfQ09ERVNfQllfTlVNQkVSO1xuZXhwb3J0cy5pbnZlcnQgPSBpbnZlcnQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/@trpc/server/dist/codes-130e62df.cjs.dev.js\n");

/***/ }),

/***/ "(api)/./node_modules/@trpc/server/dist/nodeHTTPRequestHandler-9a93c255.cjs.dev.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/nodeHTTPRequestHandler-9a93c255.cjs.dev.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar url = __webpack_require__(/*! url */ \"url\");\nvar resolveHTTPResponse = __webpack_require__(/*! ./resolveHTTPResponse-ab01e4b9.cjs.dev.js */ \"(api)/./node_modules/@trpc/server/dist/resolveHTTPResponse-ab01e4b9.cjs.dev.js\");\nvar transformTRPCResponse = __webpack_require__(/*! ./transformTRPCResponse-36a41418.cjs.dev.js */ \"(api)/./node_modules/@trpc/server/dist/transformTRPCResponse-36a41418.cjs.dev.js\");\n\nasync function getPostBody({\n  req,\n  maxBodySize\n}) {\n  return new Promise(resolve => {\n    if ('body' in req) {\n      resolve({\n        ok: true,\n        data: req.body\n      });\n      return;\n    }\n\n    let body = '';\n    let hasBody = false;\n    req.on('data', function (data) {\n      body += data;\n      hasBody = true;\n\n      if (typeof maxBodySize === 'number' && body.length > maxBodySize) {\n        resolve({\n          ok: false,\n          error: new transformTRPCResponse.TRPCError({\n            code: 'PAYLOAD_TOO_LARGE'\n          })\n        });\n        req.socket.destroy();\n      }\n    });\n    req.on('end', () => {\n      resolve({\n        ok: true,\n        data: hasBody ? body : undefined\n      });\n    });\n  });\n}\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nresolveHTTPResponse.assertNotBrowser();\nasync function nodeHTTPRequestHandler(opts) {\n  var _opts$teardown;\n\n  const createContext = async function _createContext() {\n    var _opts$createContext;\n\n    return await ((_opts$createContext = opts.createContext) === null || _opts$createContext === void 0 ? void 0 : _opts$createContext.call(opts, opts));\n  };\n\n  const {\n    path,\n    router\n  } = opts;\n  const bodyResult = await getPostBody(opts);\n  const query = opts.req.query ? new url.URLSearchParams(opts.req.query) : new url.URLSearchParams(opts.req.url.split('?')[1]);\n  const req = {\n    method: opts.req.method,\n    headers: opts.req.headers,\n    query,\n    body: bodyResult.ok ? bodyResult.data : undefined\n  };\n  const result = await resolveHTTPResponse.resolveHTTPResponse({\n    batching: opts.batching,\n    responseMeta: opts.responseMeta,\n    path,\n    createContext,\n    router,\n    req,\n    error: bodyResult.ok ? null : bodyResult.error,\n\n    onError(o) {\n      var _opts$onError;\n\n      opts === null || opts === void 0 ? void 0 : (_opts$onError = opts.onError) === null || _opts$onError === void 0 ? void 0 : _opts$onError.call(opts, { ...o,\n        req: opts.req\n      });\n    }\n\n  });\n  const {\n    res\n  } = opts;\n\n  if ('status' in result && (!res.statusCode || res.statusCode === 200)) {\n    res.statusCode = result.status;\n  }\n\n  for (const [key, value] of Object.entries((_result$headers = result.headers) !== null && _result$headers !== void 0 ? _result$headers : {})) {\n    var _result$headers;\n\n    if (typeof value === 'undefined') {\n      continue;\n    }\n\n    res.setHeader(key, value);\n  }\n\n  res.end(result.body);\n  await ((_opts$teardown = opts.teardown) === null || _opts$teardown === void 0 ? void 0 : _opts$teardown.call(opts));\n}\n\nexports.nodeHTTPRequestHandler = nodeHTTPRequestHandler;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3Qvbm9kZUhUVFBSZXF1ZXN0SGFuZGxlci05YTkzYzI1NS5janMuZGV2LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFVBQVUsbUJBQU8sQ0FBQyxnQkFBSztBQUN2QiwwQkFBMEIsbUJBQU8sQ0FBQyxpSUFBMkM7QUFDN0UsNEJBQTRCLG1CQUFPLENBQUMscUlBQTZDOztBQUVqRjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSw0SkFBNEo7QUFDNUo7QUFDQSxPQUFPO0FBQ1A7O0FBRUEsR0FBRztBQUNIO0FBQ0E7QUFDQSxJQUFJOztBQUVKO0FBQ0E7QUFDQTs7QUFFQSw0SUFBNEk7QUFDNUk7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLDhCQUE4QiIsInNvdXJjZXMiOlsid2VicGFjazovL2NyZWF0ZS1uZXgtYXBwLy4vbm9kZV9tb2R1bGVzL0B0cnBjL3NlcnZlci9kaXN0L25vZGVIVFRQUmVxdWVzdEhhbmRsZXItOWE5M2MyNTUuY2pzLmRldi5qcz8xZTc0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHVybCA9IHJlcXVpcmUoJ3VybCcpO1xudmFyIHJlc29sdmVIVFRQUmVzcG9uc2UgPSByZXF1aXJlKCcuL3Jlc29sdmVIVFRQUmVzcG9uc2UtYWIwMWU0YjkuY2pzLmRldi5qcycpO1xudmFyIHRyYW5zZm9ybVRSUENSZXNwb25zZSA9IHJlcXVpcmUoJy4vdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlLTM2YTQxNDE4LmNqcy5kZXYuanMnKTtcblxuYXN5bmMgZnVuY3Rpb24gZ2V0UG9zdEJvZHkoe1xuICByZXEsXG4gIG1heEJvZHlTaXplXG59KSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICBpZiAoJ2JvZHknIGluIHJlcSkge1xuICAgICAgcmVzb2x2ZSh7XG4gICAgICAgIG9rOiB0cnVlLFxuICAgICAgICBkYXRhOiByZXEuYm9keVxuICAgICAgfSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgbGV0IGJvZHkgPSAnJztcbiAgICBsZXQgaGFzQm9keSA9IGZhbHNlO1xuICAgIHJlcS5vbignZGF0YScsIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICBib2R5ICs9IGRhdGE7XG4gICAgICBoYXNCb2R5ID0gdHJ1ZTtcblxuICAgICAgaWYgKHR5cGVvZiBtYXhCb2R5U2l6ZSA9PT0gJ251bWJlcicgJiYgYm9keS5sZW5ndGggPiBtYXhCb2R5U2l6ZSkge1xuICAgICAgICByZXNvbHZlKHtcbiAgICAgICAgICBvazogZmFsc2UsXG4gICAgICAgICAgZXJyb3I6IG5ldyB0cmFuc2Zvcm1UUlBDUmVzcG9uc2UuVFJQQ0Vycm9yKHtcbiAgICAgICAgICAgIGNvZGU6ICdQQVlMT0FEX1RPT19MQVJHRSdcbiAgICAgICAgICB9KVxuICAgICAgICB9KTtcbiAgICAgICAgcmVxLnNvY2tldC5kZXN0cm95KCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmVxLm9uKCdlbmQnLCAoKSA9PiB7XG4gICAgICByZXNvbHZlKHtcbiAgICAgICAgb2s6IHRydWUsXG4gICAgICAgIGRhdGE6IGhhc0JvZHkgPyBib2R5IDogdW5kZWZpbmVkXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG59XG5cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb24gKi9cbnJlc29sdmVIVFRQUmVzcG9uc2UuYXNzZXJ0Tm90QnJvd3NlcigpO1xuYXN5bmMgZnVuY3Rpb24gbm9kZUhUVFBSZXF1ZXN0SGFuZGxlcihvcHRzKSB7XG4gIHZhciBfb3B0cyR0ZWFyZG93bjtcblxuICBjb25zdCBjcmVhdGVDb250ZXh0ID0gYXN5bmMgZnVuY3Rpb24gX2NyZWF0ZUNvbnRleHQoKSB7XG4gICAgdmFyIF9vcHRzJGNyZWF0ZUNvbnRleHQ7XG5cbiAgICByZXR1cm4gYXdhaXQgKChfb3B0cyRjcmVhdGVDb250ZXh0ID0gb3B0cy5jcmVhdGVDb250ZXh0KSA9PT0gbnVsbCB8fCBfb3B0cyRjcmVhdGVDb250ZXh0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfb3B0cyRjcmVhdGVDb250ZXh0LmNhbGwob3B0cywgb3B0cykpO1xuICB9O1xuXG4gIGNvbnN0IHtcbiAgICBwYXRoLFxuICAgIHJvdXRlclxuICB9ID0gb3B0cztcbiAgY29uc3QgYm9keVJlc3VsdCA9IGF3YWl0IGdldFBvc3RCb2R5KG9wdHMpO1xuICBjb25zdCBxdWVyeSA9IG9wdHMucmVxLnF1ZXJ5ID8gbmV3IHVybC5VUkxTZWFyY2hQYXJhbXMob3B0cy5yZXEucXVlcnkpIDogbmV3IHVybC5VUkxTZWFyY2hQYXJhbXMob3B0cy5yZXEudXJsLnNwbGl0KCc/JylbMV0pO1xuICBjb25zdCByZXEgPSB7XG4gICAgbWV0aG9kOiBvcHRzLnJlcS5tZXRob2QsXG4gICAgaGVhZGVyczogb3B0cy5yZXEuaGVhZGVycyxcbiAgICBxdWVyeSxcbiAgICBib2R5OiBib2R5UmVzdWx0Lm9rID8gYm9keVJlc3VsdC5kYXRhIDogdW5kZWZpbmVkXG4gIH07XG4gIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlc29sdmVIVFRQUmVzcG9uc2UucmVzb2x2ZUhUVFBSZXNwb25zZSh7XG4gICAgYmF0Y2hpbmc6IG9wdHMuYmF0Y2hpbmcsXG4gICAgcmVzcG9uc2VNZXRhOiBvcHRzLnJlc3BvbnNlTWV0YSxcbiAgICBwYXRoLFxuICAgIGNyZWF0ZUNvbnRleHQsXG4gICAgcm91dGVyLFxuICAgIHJlcSxcbiAgICBlcnJvcjogYm9keVJlc3VsdC5vayA/IG51bGwgOiBib2R5UmVzdWx0LmVycm9yLFxuXG4gICAgb25FcnJvcihvKSB7XG4gICAgICB2YXIgX29wdHMkb25FcnJvcjtcblxuICAgICAgb3B0cyA9PT0gbnVsbCB8fCBvcHRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX29wdHMkb25FcnJvciA9IG9wdHMub25FcnJvcikgPT09IG51bGwgfHwgX29wdHMkb25FcnJvciA9PT0gdm9pZCAwID8gdm9pZCAwIDogX29wdHMkb25FcnJvci5jYWxsKG9wdHMsIHsgLi4ubyxcbiAgICAgICAgcmVxOiBvcHRzLnJlcVxuICAgICAgfSk7XG4gICAgfVxuXG4gIH0pO1xuICBjb25zdCB7XG4gICAgcmVzXG4gIH0gPSBvcHRzO1xuXG4gIGlmICgnc3RhdHVzJyBpbiByZXN1bHQgJiYgKCFyZXMuc3RhdHVzQ29kZSB8fCByZXMuc3RhdHVzQ29kZSA9PT0gMjAwKSkge1xuICAgIHJlcy5zdGF0dXNDb2RlID0gcmVzdWx0LnN0YXR1cztcbiAgfVxuXG4gIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKChfcmVzdWx0JGhlYWRlcnMgPSByZXN1bHQuaGVhZGVycykgIT09IG51bGwgJiYgX3Jlc3VsdCRoZWFkZXJzICE9PSB2b2lkIDAgPyBfcmVzdWx0JGhlYWRlcnMgOiB7fSkpIHtcbiAgICB2YXIgX3Jlc3VsdCRoZWFkZXJzO1xuXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIHJlcy5zZXRIZWFkZXIoa2V5LCB2YWx1ZSk7XG4gIH1cblxuICByZXMuZW5kKHJlc3VsdC5ib2R5KTtcbiAgYXdhaXQgKChfb3B0cyR0ZWFyZG93biA9IG9wdHMudGVhcmRvd24pID09PSBudWxsIHx8IF9vcHRzJHRlYXJkb3duID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfb3B0cyR0ZWFyZG93bi5jYWxsKG9wdHMpKTtcbn1cblxuZXhwb3J0cy5ub2RlSFRUUFJlcXVlc3RIYW5kbGVyID0gbm9kZUhUVFBSZXF1ZXN0SGFuZGxlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/@trpc/server/dist/nodeHTTPRequestHandler-9a93c255.cjs.dev.js\n");

/***/ }),

/***/ "(api)/./node_modules/@trpc/server/dist/resolveHTTPResponse-ab01e4b9.cjs.dev.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/resolveHTTPResponse-ab01e4b9.cjs.dev.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar transformTRPCResponse = __webpack_require__(/*! ./transformTRPCResponse-36a41418.cjs.dev.js */ \"(api)/./node_modules/@trpc/server/dist/transformTRPCResponse-36a41418.cjs.dev.js\");\nvar codes = __webpack_require__(/*! ./codes-130e62df.cjs.dev.js */ \"(api)/./node_modules/@trpc/server/dist/codes-130e62df.cjs.dev.js\");\n\n/* istanbul ignore file */\nfunction assertNotBrowser() {\n  if (typeof window !== 'undefined' && \"development\" !== 'test' && process.env.JEST_WORKER_ID === undefined) {\n    throw new Error('Imported server-only code in the browser');\n  }\n}\n\nconst TRPC_ERROR_CODES_BY_NUMBER = /*#__PURE__*/codes.invert(codes.TRPC_ERROR_CODES_BY_KEY);\nconst JSONRPC2_TO_HTTP_CODE = {\n  PARSE_ERROR: 400,\n  BAD_REQUEST: 400,\n  NOT_FOUND: 404,\n  INTERNAL_SERVER_ERROR: 500,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  TIMEOUT: 408,\n  CONFLICT: 409,\n  CLIENT_CLOSED_REQUEST: 499,\n  PRECONDITION_FAILED: 412,\n  PAYLOAD_TOO_LARGE: 413,\n  METHOD_NOT_SUPPORTED: 405\n};\n\nfunction getStatusCodeFromKey(code) {\n  var _JSONRPC2_TO_HTTP_COD;\n\n  return (_JSONRPC2_TO_HTTP_COD = JSONRPC2_TO_HTTP_CODE[code]) !== null && _JSONRPC2_TO_HTTP_COD !== void 0 ? _JSONRPC2_TO_HTTP_COD : 500;\n}\n\nfunction getHTTPStatusCode(json) {\n  const arr = Array.isArray(json) ? json : [json];\n  const httpStatuses = new Set(arr.map(res => {\n    if ('error' in res) {\n      const data = res.error.data;\n\n      if (typeof data.httpStatus === 'number') {\n        return data.httpStatus;\n      }\n\n      const code = TRPC_ERROR_CODES_BY_NUMBER[res.error.code];\n      return getStatusCodeFromKey(code);\n    }\n\n    return 200;\n  }));\n\n  if (httpStatuses.size !== 1) {\n    return 207;\n  }\n\n  const httpStatus = httpStatuses.values().next().value;\n  return httpStatus;\n}\nfunction getHTTPStatusCodeFromError(error) {\n  const {\n    code\n  } = error;\n  return getStatusCodeFromKey(code);\n}\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nconst HTTP_METHOD_PROCEDURE_TYPE_MAP = {\n  GET: 'query',\n  POST: 'mutation',\n  PATCH: 'subscription'\n};\n\nfunction getRawProcedureInputOrThrow(req) {\n  try {\n    if (req.method === 'GET') {\n      if (!req.query.has('input')) {\n        return undefined;\n      }\n\n      const raw = req.query.get('input');\n      return JSON.parse(raw);\n    }\n\n    return typeof req.body === 'string' ? JSON.parse(req.body) : req.body;\n  } catch (cause) {\n    throw new transformTRPCResponse.TRPCError({\n      code: 'PARSE_ERROR',\n      cause\n    });\n  }\n}\n\nasync function resolveHTTPResponse(opts) {\n  var _opts$batching$enable, _opts$batching, _HTTP_METHOD_PROCEDUR;\n\n  const {\n    createContext,\n    onError,\n    router,\n    req\n  } = opts;\n  const batchingEnabled = (_opts$batching$enable = (_opts$batching = opts.batching) === null || _opts$batching === void 0 ? void 0 : _opts$batching.enabled) !== null && _opts$batching$enable !== void 0 ? _opts$batching$enable : true;\n\n  if (req.method === 'HEAD') {\n    // can be used for lambda warmup\n    return {\n      status: 204\n    };\n  }\n\n  const type = (_HTTP_METHOD_PROCEDUR = HTTP_METHOD_PROCEDURE_TYPE_MAP[req.method]) !== null && _HTTP_METHOD_PROCEDUR !== void 0 ? _HTTP_METHOD_PROCEDUR : 'unknown';\n  let ctx = undefined;\n  let paths = undefined;\n  const isBatchCall = !!req.query.get('batch');\n\n  function endResponse(untransformedJSON, errors) {\n    var _opts$responseMeta, _opts$responseMeta2;\n\n    let status = getHTTPStatusCode(untransformedJSON);\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    const meta = (_opts$responseMeta = (_opts$responseMeta2 = opts.responseMeta) === null || _opts$responseMeta2 === void 0 ? void 0 : _opts$responseMeta2.call(opts, {\n      ctx,\n      paths,\n      type,\n      data: Array.isArray(untransformedJSON) ? untransformedJSON : [untransformedJSON],\n      errors\n    })) !== null && _opts$responseMeta !== void 0 ? _opts$responseMeta : {};\n\n    for (const [key, value] of Object.entries((_meta$headers = meta.headers) !== null && _meta$headers !== void 0 ? _meta$headers : {})) {\n      var _meta$headers;\n\n      headers[key] = value;\n    }\n\n    if (meta.status) {\n      status = meta.status;\n    }\n\n    const transformedJSON = transformTRPCResponse.transformTRPCResponse(router, untransformedJSON);\n    const body = JSON.stringify(transformedJSON);\n    return {\n      body,\n      status,\n      headers\n    };\n  }\n\n  try {\n    if (opts.error) {\n      throw opts.error;\n    }\n\n    if (isBatchCall && !batchingEnabled) {\n      throw new Error(`Batching is not enabled on the server`);\n    }\n\n    if (type === 'unknown' || type === 'subscription') {\n      throw new transformTRPCResponse.TRPCError({\n        message: `Unexpected request method ${req.method}`,\n        code: 'METHOD_NOT_SUPPORTED'\n      });\n    }\n\n    const rawInput = getRawProcedureInputOrThrow(req);\n    paths = isBatchCall ? opts.path.split(',') : [opts.path];\n    ctx = await createContext();\n\n    const deserializeInputValue = rawValue => {\n      return typeof rawValue !== 'undefined' ? router._def.transformer.input.deserialize(rawValue) : rawValue;\n    };\n\n    const getInputs = () => {\n      if (!isBatchCall) {\n        return {\n          0: deserializeInputValue(rawInput)\n        };\n      }\n\n      if (rawInput == null || typeof rawInput !== 'object' || Array.isArray(rawInput)) {\n        throw new transformTRPCResponse.TRPCError({\n          code: 'BAD_REQUEST',\n          message: '\"input\" needs to be an object when doing a batch call'\n        });\n      }\n\n      const input = {};\n\n      for (const key in rawInput) {\n        const k = key;\n        const rawValue = rawInput[k];\n        const value = deserializeInputValue(rawValue);\n        input[k] = value;\n      }\n\n      return input;\n    };\n\n    const inputs = getInputs();\n    const rawResults = await Promise.all(paths.map(async (path, index) => {\n      const input = inputs[index];\n\n      try {\n        const output = await transformTRPCResponse.callProcedure({\n          ctx,\n          router,\n          path,\n          input,\n          type\n        });\n        return {\n          input,\n          path,\n          data: output\n        };\n      } catch (cause) {\n        const error = transformTRPCResponse.getErrorFromUnknown(cause);\n        onError === null || onError === void 0 ? void 0 : onError({\n          error,\n          path,\n          input,\n          ctx,\n          type: type,\n          req\n        });\n        return {\n          input,\n          path,\n          error\n        };\n      }\n    }));\n    const errors = rawResults.flatMap(obj => obj.error ? [obj.error] : []);\n    const resultEnvelopes = rawResults.map(obj => {\n      const {\n        path,\n        input\n      } = obj;\n\n      if (obj.error) {\n        const json = {\n          id: null,\n          error: router.getErrorShape({\n            error: obj.error,\n            type,\n            path,\n            input,\n            ctx\n          })\n        };\n        return json;\n      } else {\n        const json = {\n          id: null,\n          result: {\n            type: 'data',\n            data: obj.data\n          }\n        };\n        return json;\n      }\n    });\n    const result = isBatchCall ? resultEnvelopes : resultEnvelopes[0];\n    return endResponse(result, errors);\n  } catch (cause) {\n    // we get here if\n    // - batching is called when it's not enabled\n    // - `createContext()` throws\n    // - post body is too large\n    // - input deserialization fails\n    const error = transformTRPCResponse.getErrorFromUnknown(cause);\n    const json = {\n      id: null,\n      error: router.getErrorShape({\n        error,\n        type,\n        path: undefined,\n        input: undefined,\n        ctx\n      })\n    };\n    onError === null || onError === void 0 ? void 0 : onError({\n      error,\n      path: undefined,\n      input: undefined,\n      ctx,\n      type: type,\n      req\n    });\n    return endResponse(json, [error]);\n  }\n}\n\nexports.assertNotBrowser = assertNotBrowser;\nexports.getHTTPStatusCodeFromError = getHTTPStatusCodeFromError;\nexports.resolveHTTPResponse = resolveHTTPResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./node_modules/@trpc/server/dist/resolveHTTPResponse-ab01e4b9.cjs.dev.js\n");

/***/ }),

/***/ "(api)/./node_modules/@trpc/server/dist/transformTRPCResponse-36a41418.cjs.dev.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@trpc/server/dist/transformTRPCResponse-36a41418.cjs.dev.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nasync function callProcedure(opts) {\n  const {\n    type,\n    path,\n    input\n  } = opts;\n  const caller = opts.router.createCaller(opts.ctx);\n\n  if (type === 'query') {\n    return caller.query(path, input);\n  }\n\n  if (type === 'mutation') {\n    return caller.mutation(path, input);\n  }\n\n  if (type === 'subscription') {\n    const sub = await caller.subscription(path, input);\n    return sub;\n  }\n  /* istanbul ignore next */\n\n\n  throw new Error(`Unknown procedure type ${type}`);\n}\n\nclass TRPCError extends Error {\n  /**\n   * @deprecated use `cause`\n   */\n  constructor(opts) {\n    var _opts$cause, _opts$message;\n\n    const cause = (_opts$cause = opts.cause) !== null && _opts$cause !== void 0 ? _opts$cause : opts.originalError;\n    const code = opts.code;\n    const message = (_opts$message = opts.message) !== null && _opts$message !== void 0 ? _opts$message : getMessageFromUnkownError(cause, code); // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore https://github.com/tc39/proposal-error-cause\n\n    super(message, {\n      cause\n    });\n    this.originalError = void 0;\n    this.cause = void 0;\n    this.code = void 0;\n    this.code = code;\n    this.cause = this.originalError = cause;\n    this.name = 'TRPCError';\n    Object.setPrototypeOf(this, new.target.prototype);\n  }\n\n}\n\nfunction getMessageFromUnkownError(err, fallback) {\n  if (typeof err === 'string') {\n    return err;\n  }\n\n  if (err instanceof Error && typeof err.message === 'string') {\n    return err.message;\n  }\n\n  return fallback;\n}\nfunction getErrorFromUnknown(cause) {\n  // this should ideally be an `instanceof TRPCError` but for some reason that isn't working\n  // ref https://github.com/trpc/trpc/issues/331\n  if (cause instanceof Error && cause.name === 'TRPCError') {\n    return cause;\n  }\n\n  const err = new TRPCError({\n    code: 'INTERNAL_SERVER_ERROR',\n    cause\n  }); // take stack trace from cause\n\n  if (cause instanceof Error) {\n    err.stack = cause.stack;\n    err.message = cause.message;\n  }\n\n  return err;\n}\n\nfunction transformTRPCResponseItem(router, item) {\n  if ('error' in item) {\n    return { ...item,\n      error: router._def.transformer.output.serialize(item.error)\n    };\n  }\n\n  if (item.result.type !== 'data') {\n    return item;\n  }\n\n  return { ...item,\n    result: { ...item.result,\n      data: router._def.transformer.output.serialize(item.result.data)\n    }\n  };\n}\n/**\n * Takes a unserialized `TRPCResponse` and serializes it with the router's transformers\n **/\n\n\nfunction transformTRPCResponse(router, itemOrItems) {\n  return Array.isArray(itemOrItems) ? itemOrItems.map(item => transformTRPCResponseItem(router, item)) : transformTRPCResponseItem(router, itemOrItems);\n}\n\nexports.TRPCError = TRPCError;\nexports.callProcedure = callProcedure;\nexports.getErrorFromUnknown = getErrorFromUnknown;\nexports.getMessageFromUnkownError = getMessageFromUnkownError;\nexports.transformTRPCResponse = transformTRPCResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvQHRycGMvc2VydmVyL2Rpc3QvdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlLTM2YTQxNDE4LmNqcy5kZXYuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBLDRDQUE0QyxLQUFLO0FBQ2pEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0pBQWtKO0FBQ2xKOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHLEdBQUc7O0FBRU47QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsV0FBVztBQUNYLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQjtBQUNqQixxQkFBcUI7QUFDckIsMkJBQTJCO0FBQzNCLGlDQUFpQztBQUNqQyw2QkFBNkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jcmVhdGUtbmV4LWFwcC8uL25vZGVfbW9kdWxlcy9AdHJwYy9zZXJ2ZXIvZGlzdC90cmFuc2Zvcm1UUlBDUmVzcG9uc2UtMzZhNDE0MTguY2pzLmRldi5qcz8wMDYyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuYXN5bmMgZnVuY3Rpb24gY2FsbFByb2NlZHVyZShvcHRzKSB7XG4gIGNvbnN0IHtcbiAgICB0eXBlLFxuICAgIHBhdGgsXG4gICAgaW5wdXRcbiAgfSA9IG9wdHM7XG4gIGNvbnN0IGNhbGxlciA9IG9wdHMucm91dGVyLmNyZWF0ZUNhbGxlcihvcHRzLmN0eCk7XG5cbiAgaWYgKHR5cGUgPT09ICdxdWVyeScpIHtcbiAgICByZXR1cm4gY2FsbGVyLnF1ZXJ5KHBhdGgsIGlucHV0KTtcbiAgfVxuXG4gIGlmICh0eXBlID09PSAnbXV0YXRpb24nKSB7XG4gICAgcmV0dXJuIGNhbGxlci5tdXRhdGlvbihwYXRoLCBpbnB1dCk7XG4gIH1cblxuICBpZiAodHlwZSA9PT0gJ3N1YnNjcmlwdGlvbicpIHtcbiAgICBjb25zdCBzdWIgPSBhd2FpdCBjYWxsZXIuc3Vic2NyaXB0aW9uKHBhdGgsIGlucHV0KTtcbiAgICByZXR1cm4gc3ViO1xuICB9XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5cblxuICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gcHJvY2VkdXJlIHR5cGUgJHt0eXBlfWApO1xufVxuXG5jbGFzcyBUUlBDRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIC8qKlxuICAgKiBAZGVwcmVjYXRlZCB1c2UgYGNhdXNlYFxuICAgKi9cbiAgY29uc3RydWN0b3Iob3B0cykge1xuICAgIHZhciBfb3B0cyRjYXVzZSwgX29wdHMkbWVzc2FnZTtcblxuICAgIGNvbnN0IGNhdXNlID0gKF9vcHRzJGNhdXNlID0gb3B0cy5jYXVzZSkgIT09IG51bGwgJiYgX29wdHMkY2F1c2UgIT09IHZvaWQgMCA/IF9vcHRzJGNhdXNlIDogb3B0cy5vcmlnaW5hbEVycm9yO1xuICAgIGNvbnN0IGNvZGUgPSBvcHRzLmNvZGU7XG4gICAgY29uc3QgbWVzc2FnZSA9IChfb3B0cyRtZXNzYWdlID0gb3B0cy5tZXNzYWdlKSAhPT0gbnVsbCAmJiBfb3B0cyRtZXNzYWdlICE9PSB2b2lkIDAgPyBfb3B0cyRtZXNzYWdlIDogZ2V0TWVzc2FnZUZyb21Vbmtvd25FcnJvcihjYXVzZSwgY29kZSk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnRcbiAgICAvLyBAdHMtaWdub3JlIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLWVycm9yLWNhdXNlXG5cbiAgICBzdXBlcihtZXNzYWdlLCB7XG4gICAgICBjYXVzZVxuICAgIH0pO1xuICAgIHRoaXMub3JpZ2luYWxFcnJvciA9IHZvaWQgMDtcbiAgICB0aGlzLmNhdXNlID0gdm9pZCAwO1xuICAgIHRoaXMuY29kZSA9IHZvaWQgMDtcbiAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgIHRoaXMuY2F1c2UgPSB0aGlzLm9yaWdpbmFsRXJyb3IgPSBjYXVzZTtcbiAgICB0aGlzLm5hbWUgPSAnVFJQQ0Vycm9yJztcbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgbmV3LnRhcmdldC5wcm90b3R5cGUpO1xuICB9XG5cbn1cblxuZnVuY3Rpb24gZ2V0TWVzc2FnZUZyb21Vbmtvd25FcnJvcihlcnIsIGZhbGxiYWNrKSB7XG4gIGlmICh0eXBlb2YgZXJyID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBlcnI7XG4gIH1cblxuICBpZiAoZXJyIGluc3RhbmNlb2YgRXJyb3IgJiYgdHlwZW9mIGVyci5tZXNzYWdlID09PSAnc3RyaW5nJykge1xuICAgIHJldHVybiBlcnIubWVzc2FnZTtcbiAgfVxuXG4gIHJldHVybiBmYWxsYmFjaztcbn1cbmZ1bmN0aW9uIGdldEVycm9yRnJvbVVua25vd24oY2F1c2UpIHtcbiAgLy8gdGhpcyBzaG91bGQgaWRlYWxseSBiZSBhbiBgaW5zdGFuY2VvZiBUUlBDRXJyb3JgIGJ1dCBmb3Igc29tZSByZWFzb24gdGhhdCBpc24ndCB3b3JraW5nXG4gIC8vIHJlZiBodHRwczovL2dpdGh1Yi5jb20vdHJwYy90cnBjL2lzc3Vlcy8zMzFcbiAgaWYgKGNhdXNlIGluc3RhbmNlb2YgRXJyb3IgJiYgY2F1c2UubmFtZSA9PT0gJ1RSUENFcnJvcicpIHtcbiAgICByZXR1cm4gY2F1c2U7XG4gIH1cblxuICBjb25zdCBlcnIgPSBuZXcgVFJQQ0Vycm9yKHtcbiAgICBjb2RlOiAnSU5URVJOQUxfU0VSVkVSX0VSUk9SJyxcbiAgICBjYXVzZVxuICB9KTsgLy8gdGFrZSBzdGFjayB0cmFjZSBmcm9tIGNhdXNlXG5cbiAgaWYgKGNhdXNlIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICBlcnIuc3RhY2sgPSBjYXVzZS5zdGFjaztcbiAgICBlcnIubWVzc2FnZSA9IGNhdXNlLm1lc3NhZ2U7XG4gIH1cblxuICByZXR1cm4gZXJyO1xufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm1UUlBDUmVzcG9uc2VJdGVtKHJvdXRlciwgaXRlbSkge1xuICBpZiAoJ2Vycm9yJyBpbiBpdGVtKSB7XG4gICAgcmV0dXJuIHsgLi4uaXRlbSxcbiAgICAgIGVycm9yOiByb3V0ZXIuX2RlZi50cmFuc2Zvcm1lci5vdXRwdXQuc2VyaWFsaXplKGl0ZW0uZXJyb3IpXG4gICAgfTtcbiAgfVxuXG4gIGlmIChpdGVtLnJlc3VsdC50eXBlICE9PSAnZGF0YScpIHtcbiAgICByZXR1cm4gaXRlbTtcbiAgfVxuXG4gIHJldHVybiB7IC4uLml0ZW0sXG4gICAgcmVzdWx0OiB7IC4uLml0ZW0ucmVzdWx0LFxuICAgICAgZGF0YTogcm91dGVyLl9kZWYudHJhbnNmb3JtZXIub3V0cHV0LnNlcmlhbGl6ZShpdGVtLnJlc3VsdC5kYXRhKVxuICAgIH1cbiAgfTtcbn1cbi8qKlxuICogVGFrZXMgYSB1bnNlcmlhbGl6ZWQgYFRSUENSZXNwb25zZWAgYW5kIHNlcmlhbGl6ZXMgaXQgd2l0aCB0aGUgcm91dGVyJ3MgdHJhbnNmb3JtZXJzXG4gKiovXG5cblxuZnVuY3Rpb24gdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlKHJvdXRlciwgaXRlbU9ySXRlbXMpIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoaXRlbU9ySXRlbXMpID8gaXRlbU9ySXRlbXMubWFwKGl0ZW0gPT4gdHJhbnNmb3JtVFJQQ1Jlc3BvbnNlSXRlbShyb3V0ZXIsIGl0ZW0pKSA6IHRyYW5zZm9ybVRSUENSZXNwb25zZUl0ZW0ocm91dGVyLCBpdGVtT3JJdGVtcyk7XG59XG5cbmV4cG9ydHMuVFJQQ0Vycm9yID0gVFJQQ0Vycm9yO1xuZXhwb3J0cy5jYWxsUHJvY2VkdXJlID0gY2FsbFByb2NlZHVyZTtcbmV4cG9ydHMuZ2V0RXJyb3JGcm9tVW5rbm93biA9IGdldEVycm9yRnJvbVVua25vd247XG5leHBvcnRzLmdldE1lc3NhZ2VGcm9tVW5rb3duRXJyb3IgPSBnZXRNZXNzYWdlRnJvbVVua293bkVycm9yO1xuZXhwb3J0cy50cmFuc2Zvcm1UUlBDUmVzcG9uc2UgPSB0cmFuc2Zvcm1UUlBDUmVzcG9uc2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/@trpc/server/dist/transformTRPCResponse-36a41418.cjs.dev.js\n");

/***/ }),

/***/ "(api)/./src/pages/api/trpc/[trpc].ts":
/*!**************************************!*\
  !*** ./src/pages/api/trpc/[trpc].ts ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"appRouter\": () => (/* binding */ appRouter),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @trpc/server */ \"@trpc/server\");\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_trpc_server__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @trpc/server/adapters/next */ \"(api)/./node_modules/@trpc/server/adapters/next/dist/trpc-server-adapters-next.cjs.js\");\n/* harmony import */ var _trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zod */ \"zod\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([zod__WEBPACK_IMPORTED_MODULE_2__]);\nzod__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nconst appRouter = _trpc_server__WEBPACK_IMPORTED_MODULE_0__.router().query(\"hello\", {\n    input: zod__WEBPACK_IMPORTED_MODULE_2__.z.object({\n        text: zod__WEBPACK_IMPORTED_MODULE_2__.z.string().nullish()\n    }).nullish(),\n    resolve ({ input  }) {\n        return {\n            greeting: `Hello ${input?.text ?? \"world\"}`\n        };\n    }\n});\n// export API handler\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_trpc_server_adapters_next__WEBPACK_IMPORTED_MODULE_1__.createNextApiHandler({\n    router: appRouter,\n    createContext: ()=>null\n}));\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL3RycGMvW3RycGNdLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBcUM7QUFDa0I7QUFDL0I7QUFFakIsTUFBTUcsU0FBUyxHQUFHSCxnREFBVyxFQUFFLENBQUNLLEtBQUssQ0FBQyxPQUFPLEVBQUU7SUFDcERDLEtBQUssRUFBRUoseUNBQ0UsQ0FBQztRQUNOTSxJQUFJLEVBQUVOLHlDQUFRLEVBQUUsQ0FBQ1EsT0FBTyxFQUFFO0tBQzNCLENBQUMsQ0FDREEsT0FBTyxFQUFFO0lBQ1pDLE9BQU8sRUFBQyxFQUFFTCxLQUFLLEdBQUUsRUFBRTtRQUNqQixPQUFPO1lBQ0xNLFFBQVEsRUFBRSxDQUFDLE1BQU0sRUFBRU4sS0FBSyxFQUFFRSxJQUFJLElBQUksT0FBTyxDQUFDLENBQUM7U0FDNUMsQ0FBQztLQUNIO0NBQ0YsQ0FBQyxDQUFDO0FBS0gscUJBQXFCO0FBQ3JCLGlFQUFlUCw0RUFBNkIsQ0FBQztJQUMzQ0csTUFBTSxFQUFFRCxTQUFTO0lBQ2pCVyxhQUFhLEVBQUUsSUFBTSxJQUFJO0NBQzFCLENBQUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NyZWF0ZS1uZXgtYXBwLy4vc3JjL3BhZ2VzL2FwaS90cnBjL1t0cnBjXS50cz9jZTUwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHRycGMgZnJvbSBcIkB0cnBjL3NlcnZlclwiO1xuaW1wb3J0ICogYXMgdHJwY05leHQgZnJvbSBcIkB0cnBjL3NlcnZlci9hZGFwdGVycy9uZXh0XCI7XG5pbXBvcnQgeyB6IH0gZnJvbSBcInpvZFwiO1xuXG5leHBvcnQgY29uc3QgYXBwUm91dGVyID0gdHJwYy5yb3V0ZXIoKS5xdWVyeShcImhlbGxvXCIsIHtcbiAgaW5wdXQ6IHpcbiAgICAub2JqZWN0KHtcbiAgICAgIHRleHQ6IHouc3RyaW5nKCkubnVsbGlzaCgpLFxuICAgIH0pXG4gICAgLm51bGxpc2goKSxcbiAgcmVzb2x2ZSh7IGlucHV0IH0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgZ3JlZXRpbmc6IGBIZWxsbyAke2lucHV0Py50ZXh0ID8/IFwid29ybGRcIn1gLFxuICAgIH07XG4gIH0sXG59KTtcblxuLy8gZXhwb3J0IHR5cGUgZGVmaW5pdGlvbiBvZiBBUElcbmV4cG9ydCB0eXBlIEFwcFJvdXRlciA9IHR5cGVvZiBhcHBSb3V0ZXI7XG5cbi8vIGV4cG9ydCBBUEkgaGFuZGxlclxuZXhwb3J0IGRlZmF1bHQgdHJwY05leHQuY3JlYXRlTmV4dEFwaUhhbmRsZXIoe1xuICByb3V0ZXI6IGFwcFJvdXRlcixcbiAgY3JlYXRlQ29udGV4dDogKCkgPT4gbnVsbCxcbn0pO1xuIl0sIm5hbWVzIjpbInRycGMiLCJ0cnBjTmV4dCIsInoiLCJhcHBSb3V0ZXIiLCJyb3V0ZXIiLCJxdWVyeSIsImlucHV0Iiwib2JqZWN0IiwidGV4dCIsInN0cmluZyIsIm51bGxpc2giLCJyZXNvbHZlIiwiZ3JlZXRpbmciLCJjcmVhdGVOZXh0QXBpSGFuZGxlciIsImNyZWF0ZUNvbnRleHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/trpc/[trpc].ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./src/pages/api/trpc/[trpc].ts"));
module.exports = __webpack_exports__;

})();